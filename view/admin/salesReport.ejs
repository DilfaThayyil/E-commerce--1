<%-include('../partials/adminHeader')%>

    <style>
        .form-control{
        background-color: #fff;
        color: #2A3038;
        }
        .form-control:focus {
        background-color: #fff;
        color: #2A3038;
        }
        table td {
            color: black;
            font-weight: 400;
            background-color: white;
        }
        .d-flex.justify-content-between {
        display: flex;
        justify-content: space-between;
        align-items: center;
        }
        .button-container {
        display: flex;
        justify-content: center;
        gap: 10px;
    }
    </style>

    <div class="container-scroller">
      <!-- partial:partials/_sidebar.html -->
      <%-include('../partials/adminNavbar')%>

      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <!-- partial:partials/_navbar.html -->
        
        <!-- partial -->
        <div class="main-panel">
          <div class="content-wrapper">
            <div class="card">
                <div class="container mt-5">
                    <select id="period" name="period" class="form-control" onchange="toggleDateInputs()">
                        <option value="">Select</option>
                        <option value="daily">Day</option>
                        <option value="weekly">Week</option>
                        <option value="monthly">Month</option>
                        <option value="custom">Custom</option>
                    </select>
                    
                    <div id="customDateInputs" style="display: none;" class="mt-3">
                        <label for="startDate">Start date</label>
                        <input type="date" id="startDate" class="form-control">
                  
                        <label for="endDate" class="mt-3">End date</label>
                        <input type="date" id="endDate" class="form-control">
                    </div>
            
                    <button class="btn btn-danger mt-3" onclick="generate()">Generate</button>
                </div>
            
                  <div class="container mt-5">
                    <table id="salesTable" class="table table-striped">
                        <thead>
                            <tr>
                                <th>User</th>
                                <th>Order ID</th>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Status</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Dynamic content will be inserted here -->
                        </tbody>
                    </table>
                    <div class="d-flex justify-content-between align-items-center mt-3">
                      <div class="button-container">
                        <button id="download" style="display: none;" class="btn btn-success">Download CSV</button>
                        <button id="pdf" style="display: none;" class="btn btn-primary" onclick="pdfdownload()">Download PDF</button>
                      </div>
                      <h4 id="total" class="mb-0" ></h4>
                    </div>
                  </div>
            </div>
          </div>
          <!-- content-wrapper ends -->
          <!-- partial:partials/_footer.html -->
          
          <!-- partial -->
        </div>
        <!-- main-panel ends -->
      </div>
      <!-- page-body-wrapper ends -->
    </div>
    <!-- container-scroller -->
    <!-- plugins:js -->
    <%-include('../partials/adminFooter')%>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>

    <script>


        function toggleDateInputs() {
            const period = document.getElementById('period').value;
            const customDateInputs = document.getElementById('customDateInputs');
            if (period === 'custom') {
                customDateInputs.style.display = 'block';
            } else {
                customDateInputs.style.display = 'none';
            }
        }


      function generate(){
        const period = document.getElementById('period').value;
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
      if (period === 'custom' && (!startDate || !endDate)) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please select both start and end dates!',
        });
        return;
      } 
      const data = {
        period: period,
        startDate: period === 'custom' ? startDate : '',
        endDate: period === 'custom' ? endDate : ''
    };
        fetch('/admin/salesReportGenerate', {
          method: "POST",
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        })
        .then(response => response.json())
                .then(result => {
                    if (result.data && result.data.orders.length > 0) {
                        const tableBody = document.querySelector('#salesTable tbody');
                        tableBody.innerHTML = '';
                        console.log(result);
                        let totalOrderPrice = 0;
                        result.data.orders.forEach(order => {
                            order.products.forEach(product => {
                                totalOrderPrice += product.total;
                                
                                const row = tableBody.insertRow();
                                row.insertCell(0).textContent = order.userid.Name;
                                row.insertCell(1).textContent = order._id;
                                row.insertCell(2).textContent = product.name;
                                row.insertCell(3).textContent = product.discountPrice;
                                row.insertCell(4).textContent = product.status;
                                row.insertCell(5).textContent = product.quantity;
                                row.insertCell(6).textContent = product.total;
                                
                                const orderDateCell = row.insertCell(7);
                                const orderDate = new Date(order.date);
                                const formattedDate = orderDate.toISOString().split('T')[0];
                                orderDateCell.textContent = formattedDate;


                            });
                        });
                        document.getElementById('total').innerHTML = `Total: ${totalOrderPrice}`;
                        document.getElementById('download').style.display = "block";
                        document.getElementById('pdf').style.display = "block";
                        document.getElementById('download').addEventListener('click', function () {
                            const csvData = generateCSV(result.data.orders);
                            const blob = new Blob([csvData], {type: 'text/csv'});
                            const url = window.URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.href = url;
                            a.download = `sales_report${startDate}---${endDate}.csv`;
                            document.body.appendChild(a);
                            a.click();
                            document.body.removeChild(a);
                            window.URL.revokeObjectURL(url);
                        });
        
                    } else {
                      Swal.fire({
                        icon: 'info',
                        title: 'No Data',
                        text: 'No data available for the selected date range.',
                    });
                    }
                })
                .catch(error => {
                      console.error("Error fetching data:", error);
                      Swal.fire({
                       icon: 'error',
                       title: 'Oops...',
                       text: 'Failed to fetch data. Please try again.',
                   });
                });
            }


      function generateCSV(orders) {
        let csv = 'User,OrderId,Product Name,Price,Status,Quantity,Total,Date,\n';
        
          orders.forEach(order => {
            order.products.forEach(product => {
              const orderDate = new Date(order.date);
              const formattedDate = orderDate.toISOString().split('T')[0];

              csv += `${order.userid.Name} ,${order._id},${product.name},${product.price},${product.Status},${product.quantity},${product.total},${formattedDate}\n`;
            });
          });

        return csv;
      }      
            
      function pdfdownload() {
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        const element = document.getElementById('salesTable');

        html2pdf(element, {
            margin: 10,
            filename: `sales_report${startDate}---${endDate}.pdf`,
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: {
                scale: 2,
                logging: true,
                width: element.offsetWidth,
            },
            jsPDF: { unit: 'mm', format: 'a4',  orientation: 'landscape' }
        });
      }

    </script>